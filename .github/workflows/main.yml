name: "Build, test, release"

on:
  push:
    tags:
      - "*"
    branches:
#     - main
      # <DEBUG>
      - dev
      # </DEBUG>

jobs:

  build:
    name: "Build wasi-sdk"
    runs-on: ubuntu-20.04
    steps:
#     - name: "Checkout source"
#       uses: actions/checkout@v1     # >@v1 fails on submodules
#       with:
#         submodules: true
#     - name: "Install build tools"
#       run: sudo apt-get install ninja-build
#     - name: "Build and package"
#       run: NINJA_FLAGS=-v PREFIX= make -j $(nproc) package
#     - name: "Upload build artifacts"
#       uses: actions/upload-artifact@v3
#       with:
#         name: wasi-sdk
#         path: |
#           "dist/wasi-sdk-*.tar.gz"
#           "dist/libclang_rt.builtins-wasm32-wasi-*.tar.gz"
#           "dist/wasi-sysroot-*.tar.gz"
      # <DEBUG>
      - run: |
          echo "Building wasi-sdk"
          mkdir dist
          touch dist/wasi-sdk-0.tar.gz
          touch dist/libclang_rt.builtins-wasm32-wasi-0.tar.gz
          touch dist/wasi-sysroot-0.tar.gz"
      # </DEBUG>

  test:
    name: "Test wasi-sdk"
    runs-on: ubuntu-20.04
    needs: build
    steps:
#     - name: Run the test suite
#       run: NINJA_FLAGS=-v make -j $(nproc) check
      # <DEBUG>
      - run: echo "Testing wasi-sdk"
      # </DEBUG>

  release:
    name: "Release wasi-sdk"
    runs-on: ubuntu-20.04
    needs: test
    if: >-
      contains(github.event_name, 'push')
      && contains(github.event.ref, 'refs/tags')
    steps:
      - name: "Create release"
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          tag_name: ${{github.ref}}
          release_name: ${{github.ref}}
          draft: true
      - name: "Upload release asset"
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{steps.create_release.outputs.upload_url}}
          asset_path: "dist/wasi-sdk-*.tar.gz"
