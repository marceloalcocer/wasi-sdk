name: "Build and test"

on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
      arch:
        required: true
        type: string

jobs:

  # Build
  build:
    runs-on: ${{inputs.os}}
    name: "Build"
    steps:

      # Fetch source
      - name: "Checkout source"
        uses: actions/checkout@v1     # >@v1 fails on submodules
        with:
          submodules: true

      # Install build tools
      - name: "Install build tools (Ubuntu)"
        if: contains(inputs.os, 'ubuntu')
        run: sudo apt-get install ninja-build
      - name: "Install build tools (macOS)"
        if: contains(inputs.os, 'mac')
        run: brew install ninja
      - name: "Install build tools (Windows)"
        if: contains(inputs.os, 'windows')
        run: choco install ninja

      # Build and package
      - name: "Build and package (Ubuntu/macOS)"
        if: >-
          contains(inputs.os, 'ubuntu')
          || contains(inputs.os, 'mac')
        run: NINJA_FLAGS=-v PREFIX= make -j $(nproc) package
      - name: "Build and package (Windows)"
        if: contains(inputs.os, 'windows')
        shell: cmd
        env:
          MSYS2_PATH_TYPE: inherit
          MSYSTEM: MINGW64
          CC: cl
          CXX: cl
          NINJA_FLAGS: -v
          CL_ARCHES: '{ "x86": "amd64_x86", "x64": "amd64" }'
        run: |
          set "HOME=%CD%"
          set CL_ARCH=${{ fromJson(env.CL_ARCHES)[inputs.arch] }}
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" %CL_ARCH%
          C:\msys64\usr\bin\bash.exe --login -c "make package"

      # Upload build artifacts
      - name: "Upload build artifacts"
        uses: actions/upload-artifact@v3
        with:
          path: dist
          name: ${{ format('dist-{0}-{1}', inputs.os, inputs.arch) }}

  # Test
  test:
    runs-on: ${{inputs.os}}
    name: "Test"
    needs: build
    steps:

      # Fetch tests
      - name: "Checkout source"
        uses: actions/checkout@v1
        with:
          submodules: false           # Not required for tests

      # Fetch and install build
      - name: "Download build artifacts"
        uses: actions/download-artifact@v3
        with:
          name: ${{ format('dist-{0}-{1}', inputs.os, inputs.arch) }}
          path: dist
      - name: "Extract build artifacts"
        shell: bash
        run: tar -xvzf dist/wasi-sdk-*.tar.gz
      - name: "Install build artifacts (Ubuntu/macOS)"
        if: >-
          contains(inputs.os, 'ubuntu')
          || contains(inputs.os, 'mac')
        run: >-
          mkdir build
          && mv wasi-sdk-* build/install
      - name: "Install build artifacts (Windows)"
        if: contains(inputs.os, 'windows')
        shell: bash
        run: mv wasi-sdk-* /c/wasi-sdk

      # Run tests
      - name: "Run test suite (Ubuntu/macOS)"
        if: >-
          contains(inputs.os, 'ubuntu')
          || contains(inputs.os, 'mac')
        run: NINJA_FLAGS=-v PREFIX= make -j $(nproc) check
      - name: "Run test suite (Windows)"
        if: contains(inputs.os, 'windows')
        shell: cmd
        env:
          MSYS2_PATH_TYPE: inherit
          MSYSTEM: MINGW64
          CC: cl
          CXX: cl
          NINJA_FLAGS: -v
          CL_ARCHES: '{ "x86": "amd64_x86", "x64": "amd64" }'
        run: |
          set "HOME=%CD%"
          set CL_ARCH=${{ fromJson(env.CL_ARCHES)[inputs.arch] }}
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" %CL_ARCH%
          C:\msys64\usr\bin\bash.exe --login -c "make check"

